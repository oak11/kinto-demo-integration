"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _events = require("events");

require("babel/polyfill");

require("isomorphic-fetch");

var _adaptersBase = require("./adapters/base");

var _adaptersBase2 = _interopRequireDefault(_adaptersBase);

var _adaptersLocalStorage = require("./adapters/LocalStorage");

var _adaptersLocalStorage2 = _interopRequireDefault(_adaptersLocalStorage);

var _adaptersIDB = require("./adapters/IDB");

var _adaptersIDB2 = _interopRequireDefault(_adaptersIDB);

var _KintoBase2 = require("./KintoBase");

var _KintoBase3 = _interopRequireDefault(_KintoBase2);

var Kinto = (function (_KintoBase) {
  _inherits(Kinto, _KintoBase);

  _createClass(Kinto, null, [{
    key: "adapters",

    /**
     * Provides a public access to the base adapter classes. Users can create
     * a custom DB adapter by extending BaseAdapter.
     *
     * @type {Object}
     */
    get: function get() {
      return {
        BaseAdapter: _adaptersBase2["default"],
        LocalStorage: _adaptersLocalStorage2["default"],
        IDB: _adaptersIDB2["default"]
      };
    }
  }]);

  function Kinto() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, Kinto);

    var defaults = {
      adapter: Kinto.adapters.IDB,
      events: new _events.EventEmitter()
    };

    _get(Object.getPrototypeOf(Kinto.prototype), "constructor", this).call(this, Object.assign({}, defaults, options));
  }

  return Kinto;
})(_KintoBase3["default"]);

exports["default"] = Kinto;
module.exports = exports["default"];